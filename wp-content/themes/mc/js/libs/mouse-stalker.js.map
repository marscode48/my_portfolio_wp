{"version":3,"names":[],"mappings":"","sources":["libs/mouse-stalker.js"],"sourcesContent":["export class MouseStalker {\n  constructor() {\n    this.DOM = {};\n    this.DOM.ms = document.querySelector('#mouse-stalker');\n    this.position = this._initPosition();\n    this._getPosition();\n  }\n\n  _initPosition() {\n    // 開始時のマウスポジションをセット\n    const mousePosition = {\n      // ストーカーの位置（ポインターを追従する）\n      stalker: {\n        x: document.documentElement.clientWidth / 2, // 中央\n        y: document.documentElement.clientHeight / 2, // 中央から再下部にあるポインターを追いかける\n      },\n      // ポインターの位置\n      pointer: {\n        x: document.documentElement.clientWidth / 2, // 中央\n        y: document.documentElement.clientHeight / 1, // 最下部にしてストーカーを追従させる\n\n      },\n    };\n\n    return mousePosition;\n  }\n\n  _getPosition() {\n    // ユーザーがマウスを持っているか判定\n    if (window.matchMedia('(pointer: fine)').matches) {\n      // アクティブクラスを付与してストーカーを表示\n      this.DOM.ms.classList.add('is-active');\n      // マウスが動くたびにポインターの位置を取得して代入\n      document.addEventListener('mousemove', (e) => {\n        this.position.pointer.x = e.clientX;\n        this.position.pointer.y = e.clientY;\n      });\n\n      // ストーカーを更新\n      this._stalkerUpdate();\n\n      // ストーカーの形状を変更\n      this._stalkerLink();\n    }\n  }\n\n  _stalkerUpdate() {\n    // ストーカー要素の位置を更新\n    this.position.stalker.x += (this.position.pointer.x - this.position.stalker.x) * 0.1;\n    this.position.stalker.y += (this.position.pointer.y - this.position.stalker.y) * 0.1;\n    // ストーカーの位置を小数点第一位まで四捨五入\n    const x = Math.round(this.position.stalker.x * 10) / 10;\n    const y = Math.round(this.position.stalker.y * 10) / 10;\n    // マウスストーカー要素のスタイルを更新\n    this.DOM.ms.style.transform = `translate3d(${x}px,${y}px, 0)`;\n    // フレーム更新の処理直後に実行してブラウザを最適化\n    requestAnimationFrame(this._stalkerUpdate.bind(this));\n  }\n\n  _stalkerLink() {\n    // ホバー時にクラスを追加\n    const stalkerLink = document.querySelectorAll('a, button, .mouse-stalker-link');\n    for (let i = 0; i < stalkerLink.length; i += 1) {\n      stalkerLink[i].addEventListener('mouseover', () => {\n        this.DOM.ms.classList.add('is-hover');\n      });\n      stalkerLink[i].addEventListener('mouseout', () => {\n        this.DOM.ms.classList.remove('is-hover');\n      });\n    }\n  }\n}\n"],"file":"mouse-stalker.js"}